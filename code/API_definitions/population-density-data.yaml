openapi: 3.0.3
info:
  title: Population Density Data
  description: >-
    Allows developers with the capability to get population density estimations
    for a specific area at a future period of time, considering historical
    anonymized information of the network connected devices in the requested
    area.

    # Introduction

    This API allows estimates of population density to be obtained for a specific
    area in a future time period. This functionality can be used for multiple use
    cases, some of the possible use cases for this API are shown below.


    - Providing BVLOS (Beyond Visual Line of Sight) flights with the
    information to meet SORA 2.5 (Specific Operation Risk Assessment)
    requirements in terms of intrinsic Ground Risk Class (iGRC).
    More information in [Specific Operations Risk Assessment](https://www.easa.europa.eu/en/domains/civil-drones-rpas/specific-category-civil-drones/specific-operations-risk-assessment-sora)

    - Providing information to identify if the ground risk class for
    a given drone flight path is acceptable for the time of the flight, or an
    alternative time should be considered to lower the risk.

    - Sustainable Urban Planning. Enabling urban planners to specify the area of
    interest and a future time period.

    - Environmental monitoring at mass events, such as concerts or festivals.

    # Relevant terms and definitions

    * **Population Density**: refers to the number of people in a concrete area.

    # API Functionality

    This API can be used for use cases that are not specified in this description,
    we simply wanted to provide examples of possible use cases.


    Once a developer specifies: (1) the area as a polygon shape, and (2) time interval
    in which they want to obtain the population density, the API will return a data
    set consisting of a sequence of time ranges each time range containing the
    input polygon subdivided into equal sized cells.


    In each of the equal sized cells of the grid, a series of estimated statistics will be
    reported for each time slot within the range, these being: maximum expected
    population, minimum and average.


    These KPIs per geographic unit are an estimate relative to the future and
    based on calculations with historical data and/or prediction models trained
    on such data.  The polygon provided must comply with certain restrictions,
    which must be previously validated by the developer:

    - The polygon will not be able to exceed a certain area.

    - The polygon cannot have an arbitrary complexity (unlimited number of
    sides, complex shapes, etc.).

    - The polygon must be associated with a location where the telco provides
    mobile connectivity services. Cells outside the area supported by the implementation
    will not be returned. Therefore, if a polygon is located entirely outside the
    supported area, an empty array will be returned.


    **NOTE**: In order to ensure anonymized information, if the data relating to
    the cell in the required time interval is not sufficient to be displayed due
    to [k-anonymity](https://en.wikipedia.org/wiki/K-anonymity), no such data will
    be returned and the value of the dataType property will be `LOW_DENSITY`.

    # Resources and Operations overview

    The API provides one endpoint that accepts POST requests for retrieving population
    density information in the specified area.


    # Further info and support

    (FAQs will be added in a later version of the documentation)
  termsOfService: http://swagger.io/terms/
  contact:
    email: project-email@sample.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0-wip
externalDocs:
  description: Product documentation at Camara.
  url: https://github.com/camaraproject/
servers:
  - url: '{apiRoot}/population-density-data/v0'
    variables:
      apiRoot:
        default: http://localhost:9091
        description: API root
tags:
  - name: Population Density Data
    description: Operations to retrieve population density information.
paths:
  /retrieve:
    post:
      tags:
        - Population Density Data
      summary: Retrieves population density information in the specified area
      description: >-
        Retrieves estimated statistics (maximum, minimum and average) related to
        expected population for a time slot for a given polygon as a data set
        consisting of a sequence of quadrangular objects containing the input
        polygon subdivided into equal sized cells.
      operationId: retrievePopulationDensity
      parameters:
        - $ref: '#/components/parameters/x-correlator'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PopulationDensityRequest'
        required: true
      responses:
        '200':
          description: Population density data result.
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulationDensityResponse'
              examples:
                PopulationDensityResponseExample:
                  $ref: '#/components/examples/PopulationDensityResponseExample'
        '400':
          $ref: '#/components/responses/RetrieveLocationBadRequest400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/Generic404'
        '500':
          $ref: '#/components/responses/Generic500'
        '503':
          $ref: '#/components/responses/Generic503'
      security:
        - openId:
          - population-density-data:read
components:
  securitySchemes:
    openId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
  headers:
    x-correlator:
      description: Correlation id for the different services.
      schema:
        type: string
  parameters:
    x-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services.
      schema:
        type: string
  schemas:
    PopulationDensityRequest:
      type: object
      description: >-
        Request object for retrieving population density data in a
        specified area at a future period of time.
        **NOTE**: The difference between `startDate` and `endDate` cannot be greater than 7 days.
      properties:
        area:
          $ref: '#/components/schemas/Area'
        startDate:
          type: string
          format: date-time
          description: >-
            Start date time in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)
            and must have time zone. Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ
            (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z).
            The minimum startDate is the time of the request.
        endDate:
          type: string
          format: date-time
          description: >-
            End date time in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)
            and must have time zone. Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ
            (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z).
            The maximum endDate allowed is 3 months from the time of the request.
      required:
        - area
        - startDate
        - endDate
    Area:
      type: object
      description: >-
        Geographical representation of a polygonal area defined
        by a collection of coordinates forming a closed loop.
      required:
        - boundary
      properties:
        boundary:
          type: array
          description: >-
            Collection of points defining the outer perimeter of the
            area, forming a sequence of vertices connected by straight-line
            segments.
          items:
            $ref: '#/components/schemas/Point'
          minItems: 3
          maxItems: 15
    Point:
      type: object
      description: >-
        Geographical coordinates (latitude, longitude) defining a location in a
        map.
      required:
        - latitude
        - longitude
      properties:
        latitude:
          $ref: '#/components/schemas/Latitude'
        longitude:
          $ref: '#/components/schemas/Longitude'
      example:
        latitude: 39.699938
        longitude: -2.777067
    Latitude:
      description: Latitude component of a location.
      type: number
      format: double
      minimum: -90
      maximum: 90
    Longitude:
      description: Longitude component of location.
      type: number
      format: double
      minimum: -180
      maximum: 180
    PopulationDensityResponse:
      type: object
      description: >-
        Population density values will be represented in time intervals for different 
        cells of the requested area. Each element in the array corresponds to a time
        interval, containing population data for the grid cells. The intervals are 1 hour long.
      properties:
        timedPopulationData:
          type: array
          description: >-
           Time ranges along with the population density data for the cells within it.
            The request startDate or the request endDate have to be fully covered by the intervals.
            For example, if the intervals are 1-hour long and the input date range were [2024-01-03T11:25:00Z
            to 2024-01-03T12:45:00Z] it would contain 2 intervals (Interval from 2024-01-03T11:00:00Z
            to 2024-01-03T12:00:00Z and interval from 2024-01-03T12:00:00Z to 2024-01-03T13:00:00Z).
          items:
            $ref: '#/components/schemas/TimedPopulationData'
        status:
          $ref: '#/components/schemas/ResponseStatus'
      required:
       - timedPopulationData
       - status
    ResponseStatus:
      type: string
      description: >-
        Represents the state of the response for the input polygon defined in the request, the possible values are:
          - `SUPPORTED_AREA`: The whole request area is supported. Population density data for the entire requested area is returned.
          - `PART_OF_AREA_NOT_SUPPORTED`: Part of the requested area is outside the MNOs coverage area, the cells outside the coverage area are not returned.
          - `AREA_NOT_SUPPORTED`: The whole requested area is outside the MNOs coverage area. No data will be returned.
      enum:
        - SUPPORTED_AREA
        - PART_OF_AREA_NOT_SUPPORTED
        - AREA_NOT_SUPPORTED
    TimedPopulationData:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
          description: >-
            Interval start time in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)
            and must have time zone. Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ
            (i.e. which allows 2023-07-03T14:27:08+02:00 or 2023-07-03T12:27:08Z).
        endTime:
          type: string
          format: date-time
          description: >-
            Interval end time in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)
            and must have time zone. Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ
            (i.e. which allows 2023-07-03T14:27:08+02:00 or 2023-07-03T12:27:08Z).
          example: '2024-01-03T13:00:00Z'
        cellPopulationData:
          $ref: '#/components/schemas/CellPopulationDataArray'
      required:
        - startTime
        - endTime
        - cellPopulationData
    CellPopulationDataArray:
      type: array
      description: >-
        Population data for the different cells in a concrete time range.
      items:
        $ref: '#/components/schemas/CellPopulationData'
      minItems: 1
    CellPopulationData:
      type: object
      description: Population density data of a cell in a concrete time range.
      properties:
        geohash:
          type: string
          description: >-
            Coordinates of the cell represented as a string using the [Geohash system](https://en.wikipedia.org/wiki/Geohash).
            Encoding a geographic location into a short string. The value length,
            and thus the cell granularity, is determined by the implementation.
          example: ezdmemd
        populationData:
          $ref: '#/components/schemas/PopulationData'
      required:
        - geohash
        - populationData
    PopulationData:
      description: >-
        Object that contains the maximum, minimum and average population in a
        cell for a specific interval. In case of insufficient data to guarantee an
        anonymized prediction due to the k-anonymity within a specific cell and
        time range, no population data will be returned and the property dataType
        value will be "LOW_DENSITY".
      properties:
        dataType:
          type: string
          enum:
            - LOW_DENSITY
            - DENSITY_ESTIMATION
      required:
        - dataType
      discriminator:
        propertyName: dataType
        mapping:
          LOW_DENSITY: '#/components/schemas/PopulationData'
          DENSITY_ESTIMATION: '#/components/schemas/DensityEstimationPopulationData'
    DensityEstimationPopulationData:
      allOf:
        - $ref: '#/components/schemas/PopulationData'
        - type: object
          properties:
            maxPopulation:
              type: number
              format: double
              description: Maximum population expected in the defined area.
            minPopulation:
              type: number
              format: double
              description: Minimum population expected in the defined area.
            avgPopulation:
              type: number
              format: double
              description: Average population expected in the defined area.
          required:
            - maxPopulation
            - minPopulation
            - avgPopulation
    ErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP status code returned along with this error response.
        code:
          type: string
          description: Code given to this error.
        message:
          type: string
          description: Detailed error description.
  responses:
    RetrieveLocationBadRequest400:
      description: >-
        Problem with the client request. In addition to regular scenario of
        `INVALID_ARGUMENT`, another scenarios may exist:
          - The area is not a polygon shape or has an arbitrary complexity ("code": "POPULATION_DENSITY_DATA.INVALID_AREA", "message": "The area is not a polygon shape or has an arbitrary complexity")
          - Indicated `startDate` is greater than the maximum allowed ("code": "POPULATION_DENSITY_DATA.MAX_STARTDATE_EXCEEDED", "message": "Indicated startDate is greater than the maximum allowed")
          - Indicated `startDate` is earlier than the minimum allowed ("code": "POPULATION_DENSITY_DATA.MIN_STARTDATE_EXCEEDED", "message": "Indicated startDate is earlier than the minimum allowed")
          - Indicated `endDate` is earlier than the `startDate` ("code": "POPULATION_DENSITY_DATA.INVALID_END_DATE", "message": "Indicated endDate is earlier than the startDate")
          - Indicated time period is greater than the maximum allowed (More than maximum hours between startDate and endDate) ("code": "POPULATION_DENSITY_DATA.MAX_TIME_PERIOD_EXCEEDED", "message": "Indicated time period is greater than the maximum allowed (More than maximum hours between startDate and endDate)")
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          examples:
            InvalidArgument:
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Invalid input
            InvalidAreaIssue:
              value:
                status: 400
                code: POPULATION_DENSITY_INFORMATION.INVALID_AREA
                message: The area is not a polygon shape or has an arbitrary complexity
            MaxStartDateIssue:
              value:
                status: 400
                code: POPULATION_DENSITY_DATA.MAX_STARTDATE_EXCEEDED
                message: >-
                  Indicated startDate is greater than the maximum allowed
            MinStartDateIssue:
              value:
                status: 400
                code: POPULATION_DENSITY_DATA.MIN_STARTDATE_EXCEEDED
                message: >-
                  Indicated startDate is earlier than the minimum allowed
            InvalidEndDateIssue:
              value:
                status: 400
                code: POPULATION_DENSITY_DATA.INVALID_END_DATE
                message: Indicated endDate is earlier than the startDate
            MaxDurationIssue:
              value:
                status: 400
                code: POPULATION_DENSITY_DATA.MAX_TIME_PERIOD_EXCEEDED
                message: >-
                  Indicated time period is greater than the maximum allowed
                  (More than maximum hours between startDate and endDate)
    Generic401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 401
            code: UNAUTHENTICATED
            message: 'Authorization failed: ...'
    Generic403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 403
            code: PERMISSION_DENIED
            message: 'Operation not allowed: ...'
    Generic404:
      description: Not found
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 404
            code: NOT_FOUND
            message: The specified resource is not found
    Generic500:
      description: Internal server error
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 500
            code: INTERNAL
            message: Internal server error
    Generic503:
      description: Service unavailable
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 503
            code: UNAVAILABLE
            message: Service unavailable
  examples:
    PopulationDensityResponseExample:
      value:
        status: SUPPORTED_AREA
        timedPopulationData:
          - startTime: "2024-01-03T10:00:00Z"
            endTime: "2024-01-03T11:00:00Z"
            cellPopulationData:
              - geohash: ezdqemf
                populationData:
                  dataType: DENSITY_ESTIMATION
                  maxPopulation: 150
                  minPopulation: 30
                  avgPopulation: 60
              - geohash: ezdqemg
                populationData:
                  dataType: DENSITY_ESTIMATION
                  maxPopulation: 100
                  minPopulation: 40
                  avgPopulation: 90
              - geohash: ezdqemu
                populationData:
                  dataType: "LOW_DENSITY"
          - startTime: "2024-01-03T11:00:00Z"
            endTime: "2024-01-03T12:00:00Z"
            cellPopulationData:
              - geohash: ezdqemf
                populationData:
                  dataType: DENSITY_ESTIMATION
                  maxPopulation: 100
                  minPopulation: 30
                  avgPopulation: 70
              - geohash: ezdqemg
                populationData:
                  dataType: DENSITY_ESTIMATION
                  maxPopulation: 200
                  minPopulation: 40
                  avgPopulation: 100
              - geohash: ezdqemu
                populationData:
                  dataType: DENSITY_ESTIMATION
                  maxPopulation: 200
                  minPopulation: 40
                  avgPopulation: 100
